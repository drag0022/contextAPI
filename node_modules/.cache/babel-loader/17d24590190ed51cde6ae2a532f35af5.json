{"ast":null,"code":"var _jsxFileName = \"/Users/eduarddraghiciu/Documents/code/Fall2021/React/week7/demo/demo-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Head from './Head';\nimport { useState } from 'react';\nimport ThemeContext from './ThemeContext';\nimport themes from './themes.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [theme, setTheme] = useState(themes.light); //create a value to put into our context object\n  //add a function to change the context object\n\n  function toggleTheme() {\n    //switch between light and dark\n    console.log('comparing', theme.backgroundColor, themes.dark.backgroundColor);\n    const newTheme = theme.backgroundColor === themes.Space.backgroundColor ? themes.Aqua : themes.Space;\n    setTheme(newTheme);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: [theme, toggleTheme],\n      children: /*#__PURE__*/_jsxDEV(Head, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"5IR7NF08hS1O0qqS7UthgDFpkEo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/eduarddraghiciu/Documents/code/Fall2021/React/week7/demo/demo-app/src/App.js"],"names":["Head","useState","ThemeContext","themes","App","theme","setTheme","light","toggleTheme","console","log","backgroundColor","dark","newTheme","Space","Aqua"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,QAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACE,MAAM,CAACI,KAAR,CAAlC,CAD6B,CAE7B;AAEA;;AACA,WAASC,WAAT,GAAuB;AACtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CACC,WADD,EAECL,KAAK,CAACM,eAFP,EAGCR,MAAM,CAACS,IAAP,CAAYD,eAHb;AAKA,UAAME,QAAQ,GACbR,KAAK,CAACM,eAAN,KAA0BR,MAAM,CAACW,KAAP,CAAaH,eAAvC,GACGR,MAAM,CAACY,IADV,GAEGZ,MAAM,CAACW,KAHX;AAIAR,IAAAA,QAAQ,CAACO,QAAD,CAAR;AACA;;AAED,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,CAACR,KAAD,EAAQG,WAAR,CAA9B;AAAA,6BACC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA;;GA1BuBJ,G;;KAAAA,G","sourcesContent":["import './App.css';\nimport Head from './Head';\nimport { useState } from 'react';\nimport ThemeContext from './ThemeContext';\nimport themes from './themes.js';\nexport default function App() {\n\tconst [theme, setTheme] = useState(themes.light);\n\t//create a value to put into our context object\n\n\t//add a function to change the context object\n\tfunction toggleTheme() {\n\t\t//switch between light and dark\n\t\tconsole.log(\n\t\t\t'comparing',\n\t\t\ttheme.backgroundColor,\n\t\t\tthemes.dark.backgroundColor\n\t\t);\n\t\tconst newTheme =\n\t\t\ttheme.backgroundColor === themes.Space.backgroundColor\n\t\t\t\t? themes.Aqua\n\t\t\t\t: themes.Space;\n\t\tsetTheme(newTheme);\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<ThemeContext.Provider value={[theme, toggleTheme]}>\n\t\t\t\t<Head />\n\t\t\t</ThemeContext.Provider>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}